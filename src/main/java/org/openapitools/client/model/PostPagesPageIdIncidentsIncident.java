/*
 * Statuspage API
 * # Code of Conduct Please don't abuse the API, and please report all feature requests and issues to https://support.atlassian.com/contact  # Rate Limiting Each API token is limited to 1 request / second as measured on a 60 second rolling window. To get this limit increased, please contact us at https://support.atlassian.com/contact  # Basics  ## HTTPS It's required  ## URL Prefix In order to maintain version integrity into the future, the API is versioned. All calls currently begin with the following prefix:    https://api.statuspage.io/v1/  ## RESTful Interface Wherever possible, the API seeks to implement repeatable patterns with logical, representative URLs and descriptive HTTP verbs. Below are some examples and conventions you will see throughout the documentation.  * Collections are buckets: https://api.statuspage.io/v1/pages/asdf123/incidents.json * Elements have unique IDs: https://api.statuspage.io/v1/pages/asdf123/incidents/jklm456.json * GET will retrieve information about a collection/element * POST will create an element in a collection * PATCH will update a single element * PUT will replace a single element in a collection (rarely used) * DELETE will destroy a single element  ## Sending Data Information can be sent in the body as form urlencoded or JSON, but make sure the Content-Type header matches the body structure or the server gremlins will be angry.  All examples are provided in JSON format, however they can easily be converted to form encoding if required.  Some examples of how to convert things are below:      // JSON     {       \"incident\": {         \"name\": \"test incident\",         \"components\": [\"8kbf7d35c070\", \"vtnh60py4yd7\"]       }     }      // Form Encoded (using curl as an example):     curl -X POST https://api.statuspage.io/v1/example \\       -d \"incident[name]=test incident\" \\       -d \"incident[components][]=8kbf7d35c070\" \\       -d \"incident[components][]=vtnh60py4yd7\"  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;
import org.threeten.bp.format.DateTimeFormatter;
import org.threeten.bp.ZoneId;

/**
 * PostPagesPageIdIncidentsIncident
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-18T19:24:20.728733+08:00[Asia/Shanghai]")
public class PostPagesPageIdIncidentsIncident {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * The incident status. For realtime incidents, valid values are investigating, identified, monitoring, and resolved. For scheduled incidents, valid values are scheduled, in_progress, verifying, and completed.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    INVESTIGATING("investigating"),
    
    IDENTIFIED("identified"),
    
    MONITORING("monitoring"),
    
    RESOLVED("resolved"),
    
    SCHEDULED("scheduled"),
    
    IN_PROGRESS("in_progress"),
    
    VERIFYING("verifying"),
    
    COMPLETED("completed");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  /**
   * value to override calculated impact value
   */
  @JsonAdapter(ImpactOverrideEnum.Adapter.class)
  public enum ImpactOverrideEnum {
    MAINTENANCE("maintenance"),
    
    NONE("none"),
    
    CRITICAL("critical"),
    
    MAJOR("major"),
    
    MINOR("minor");

    private String value;

    ImpactOverrideEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ImpactOverrideEnum fromValue(String value) {
      for (ImpactOverrideEnum b : ImpactOverrideEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ImpactOverrideEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ImpactOverrideEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ImpactOverrideEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ImpactOverrideEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_IMPACT_OVERRIDE = "impact_override";
  @SerializedName(SERIALIZED_NAME_IMPACT_OVERRIDE)
  private ImpactOverrideEnum impactOverride = ImpactOverrideEnum.CRITICAL;

  public static final String SERIALIZED_NAME_SCHEDULED_FOR = "scheduled_for";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_FOR)
  private String scheduledFor = "";

  public static final String SERIALIZED_NAME_SCHEDULED_UNTIL = "scheduled_until";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_UNTIL)
  private String scheduledUntil = "";

  public static final String SERIALIZED_NAME_SCHEDULED_REMIND_PRIOR = "scheduled_remind_prior";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_REMIND_PRIOR)
  private Boolean scheduledRemindPrior = false;

  public static final String SERIALIZED_NAME_SCHEDULED_AUTO_IN_PROGRESS = "scheduled_auto_in_progress";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_AUTO_IN_PROGRESS)
  private Boolean scheduledAutoInProgress = false;

  public static final String SERIALIZED_NAME_SCHEDULED_AUTO_COMPLETED = "scheduled_auto_completed";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_AUTO_COMPLETED)
  private Boolean scheduledAutoCompleted = false;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Object metadata;

  public static final String SERIALIZED_NAME_DELIVER_NOTIFICATIONS = "deliver_notifications";
  @SerializedName(SERIALIZED_NAME_DELIVER_NOTIFICATIONS)
  private Boolean deliverNotifications = true;

  public static final String SERIALIZED_NAME_AUTO_TRANSITION_DELIVER_NOTIFICATIONS_AT_END = "auto_transition_deliver_notifications_at_end";
  @SerializedName(SERIALIZED_NAME_AUTO_TRANSITION_DELIVER_NOTIFICATIONS_AT_END)
  private Boolean autoTransitionDeliverNotificationsAtEnd = true;

  public static final String SERIALIZED_NAME_AUTO_TRANSITION_DELIVER_NOTIFICATIONS_AT_START = "auto_transition_deliver_notifications_at_start";
  @SerializedName(SERIALIZED_NAME_AUTO_TRANSITION_DELIVER_NOTIFICATIONS_AT_START)
  private Boolean autoTransitionDeliverNotificationsAtStart = true;

  public static final String SERIALIZED_NAME_AUTO_TRANSITION_TO_MAINTENANCE_STATE = "auto_transition_to_maintenance_state";
  @SerializedName(SERIALIZED_NAME_AUTO_TRANSITION_TO_MAINTENANCE_STATE)
  private Boolean autoTransitionToMaintenanceState = true;

  public static final String SERIALIZED_NAME_AUTO_TRANSITION_TO_OPERATIONAL_STATE = "auto_transition_to_operational_state";
  @SerializedName(SERIALIZED_NAME_AUTO_TRANSITION_TO_OPERATIONAL_STATE)
  private Boolean autoTransitionToOperationalState = true;

  public static final String SERIALIZED_NAME_AUTO_TWEET_AT_BEGINNING = "auto_tweet_at_beginning";
  @SerializedName(SERIALIZED_NAME_AUTO_TWEET_AT_BEGINNING)
  private Boolean autoTweetAtBeginning = true;

  public static final String SERIALIZED_NAME_AUTO_TWEET_ON_COMPLETION = "auto_tweet_on_completion";
  @SerializedName(SERIALIZED_NAME_AUTO_TWEET_ON_COMPLETION)
  private Boolean autoTweetOnCompletion = true;

  public static final String SERIALIZED_NAME_AUTO_TWEET_ON_CREATION = "auto_tweet_on_creation";
  @SerializedName(SERIALIZED_NAME_AUTO_TWEET_ON_CREATION)
  private Boolean autoTweetOnCreation = true;

  public static final String SERIALIZED_NAME_AUTO_TWEET_ONE_HOUR_BEFORE = "auto_tweet_one_hour_before";
  @SerializedName(SERIALIZED_NAME_AUTO_TWEET_ONE_HOUR_BEFORE)
  private Boolean autoTweetOneHourBefore = true;

  public static final String SERIALIZED_NAME_BACKFILL_DATE = "backfill_date";
  @SerializedName(SERIALIZED_NAME_BACKFILL_DATE)
  private String backfillDate = "";

  public static final String SERIALIZED_NAME_BACKFILLED = "backfilled";
  @SerializedName(SERIALIZED_NAME_BACKFILLED)
  private Boolean backfilled = false;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body = "";

  public static final String SERIALIZED_NAME_COMPONENTS = "components";
  @SerializedName(SERIALIZED_NAME_COMPONENTS)
  private Map<String, String> components = null;

  public static final String SERIALIZED_NAME_COMPONENT_IDS = "component_ids";
  @SerializedName(SERIALIZED_NAME_COMPONENT_IDS)
  private List<String> componentIds = null;

  public static final String SERIALIZED_NAME_SCHEDULED_AUTO_TRANSITION = "scheduled_auto_transition";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_AUTO_TRANSITION)
  private Boolean scheduledAutoTransition = false;


  public PostPagesPageIdIncidentsIncident name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Incident Name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Incident Name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public PostPagesPageIdIncidentsIncident status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * The incident status. For realtime incidents, valid values are investigating, identified, monitoring, and resolved. For scheduled incidents, valid values are scheduled, in_progress, verifying, and completed.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The incident status. For realtime incidents, valid values are investigating, identified, monitoring, and resolved. For scheduled incidents, valid values are scheduled, in_progress, verifying, and completed.")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public PostPagesPageIdIncidentsIncident impactOverride(ImpactOverrideEnum impactOverride) {
    
    this.impactOverride = impactOverride;
    return this;
  }

   /**
   * value to override calculated impact value
   * @return impactOverride
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "value to override calculated impact value")

  public ImpactOverrideEnum getImpactOverride() {
    return impactOverride;
  }


  public void setImpactOverride(ImpactOverrideEnum impactOverride) {
    this.impactOverride = impactOverride;
  }


  public PostPagesPageIdIncidentsIncident scheduledFor(String scheduledFor) {
    
    this.scheduledFor = scheduledFor;
    return this;
  }

   /**
   * The timestamp the incident is scheduled for.
   * @return scheduledFor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp the incident is scheduled for.")

  public String getScheduledFor() {
    return scheduledFor;
  }


  public void setScheduledFor(String scheduledFor) {
    this.scheduledFor = scheduledFor;
  }


  public PostPagesPageIdIncidentsIncident scheduledUntil(String scheduledUntil) {
    
    this.scheduledUntil = scheduledUntil;
    return this;
  }

   /**
   * The timestamp the incident is scheduled until.
   * @return scheduledUntil
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp the incident is scheduled until.")

  public String getScheduledUntil() {
    return scheduledUntil;
  }


  public void setScheduledUntil(String scheduledUntil) {
    this.scheduledUntil = scheduledUntil;
  }


  public PostPagesPageIdIncidentsIncident scheduledRemindPrior(Boolean scheduledRemindPrior) {
    
    this.scheduledRemindPrior = scheduledRemindPrior;
    return this;
  }

   /**
   * Controls whether to remind subscribers prior to scheduled incidents.
   * @return scheduledRemindPrior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls whether to remind subscribers prior to scheduled incidents.")

  public Boolean getScheduledRemindPrior() {
    return scheduledRemindPrior;
  }


  public void setScheduledRemindPrior(Boolean scheduledRemindPrior) {
    this.scheduledRemindPrior = scheduledRemindPrior;
  }


  public PostPagesPageIdIncidentsIncident scheduledAutoInProgress(Boolean scheduledAutoInProgress) {
    
    this.scheduledAutoInProgress = scheduledAutoInProgress;
    return this;
  }

   /**
   * Controls whether the incident is scheduled to automatically change to in progress.
   * @return scheduledAutoInProgress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls whether the incident is scheduled to automatically change to in progress.")

  public Boolean getScheduledAutoInProgress() {
    return scheduledAutoInProgress;
  }


  public void setScheduledAutoInProgress(Boolean scheduledAutoInProgress) {
    this.scheduledAutoInProgress = scheduledAutoInProgress;
  }


  public PostPagesPageIdIncidentsIncident scheduledAutoCompleted(Boolean scheduledAutoCompleted) {
    
    this.scheduledAutoCompleted = scheduledAutoCompleted;
    return this;
  }

   /**
   * Controls whether the incident is scheduled to automatically change to complete.
   * @return scheduledAutoCompleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls whether the incident is scheduled to automatically change to complete.")

  public Boolean getScheduledAutoCompleted() {
    return scheduledAutoCompleted;
  }


  public void setScheduledAutoCompleted(Boolean scheduledAutoCompleted) {
    this.scheduledAutoCompleted = scheduledAutoCompleted;
  }


  public PostPagesPageIdIncidentsIncident metadata(Object metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Attach a json object to the incident. All top-level values in the object must also be objects.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Attach a json object to the incident. All top-level values in the object must also be objects.")

  public Object getMetadata() {
    return metadata;
  }


  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  public PostPagesPageIdIncidentsIncident deliverNotifications(Boolean deliverNotifications) {
    
    this.deliverNotifications = deliverNotifications;
    return this;
  }

   /**
   * Deliver notifications to subscribers if this is true. If this is false, create an incident without notifying customers.
   * @return deliverNotifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deliver notifications to subscribers if this is true. If this is false, create an incident without notifying customers.")

  public Boolean getDeliverNotifications() {
    return deliverNotifications;
  }


  public void setDeliverNotifications(Boolean deliverNotifications) {
    this.deliverNotifications = deliverNotifications;
  }


  public PostPagesPageIdIncidentsIncident autoTransitionDeliverNotificationsAtEnd(Boolean autoTransitionDeliverNotificationsAtEnd) {
    
    this.autoTransitionDeliverNotificationsAtEnd = autoTransitionDeliverNotificationsAtEnd;
    return this;
  }

   /**
   * Controls whether send notification when scheduled maintenances auto transition to completed.
   * @return autoTransitionDeliverNotificationsAtEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls whether send notification when scheduled maintenances auto transition to completed.")

  public Boolean getAutoTransitionDeliverNotificationsAtEnd() {
    return autoTransitionDeliverNotificationsAtEnd;
  }


  public void setAutoTransitionDeliverNotificationsAtEnd(Boolean autoTransitionDeliverNotificationsAtEnd) {
    this.autoTransitionDeliverNotificationsAtEnd = autoTransitionDeliverNotificationsAtEnd;
  }


  public PostPagesPageIdIncidentsIncident autoTransitionDeliverNotificationsAtStart(Boolean autoTransitionDeliverNotificationsAtStart) {
    
    this.autoTransitionDeliverNotificationsAtStart = autoTransitionDeliverNotificationsAtStart;
    return this;
  }

   /**
   * Controls whether send notification when scheduled maintenances auto transition to started.
   * @return autoTransitionDeliverNotificationsAtStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls whether send notification when scheduled maintenances auto transition to started.")

  public Boolean getAutoTransitionDeliverNotificationsAtStart() {
    return autoTransitionDeliverNotificationsAtStart;
  }


  public void setAutoTransitionDeliverNotificationsAtStart(Boolean autoTransitionDeliverNotificationsAtStart) {
    this.autoTransitionDeliverNotificationsAtStart = autoTransitionDeliverNotificationsAtStart;
  }


  public PostPagesPageIdIncidentsIncident autoTransitionToMaintenanceState(Boolean autoTransitionToMaintenanceState) {
    
    this.autoTransitionToMaintenanceState = autoTransitionToMaintenanceState;
    return this;
  }

   /**
   * Controls whether change components status to under_maintenance once scheduled maintenance is in progress.
   * @return autoTransitionToMaintenanceState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls whether change components status to under_maintenance once scheduled maintenance is in progress.")

  public Boolean getAutoTransitionToMaintenanceState() {
    return autoTransitionToMaintenanceState;
  }


  public void setAutoTransitionToMaintenanceState(Boolean autoTransitionToMaintenanceState) {
    this.autoTransitionToMaintenanceState = autoTransitionToMaintenanceState;
  }


  public PostPagesPageIdIncidentsIncident autoTransitionToOperationalState(Boolean autoTransitionToOperationalState) {
    
    this.autoTransitionToOperationalState = autoTransitionToOperationalState;
    return this;
  }

   /**
   * Controls whether change components status to operational once scheduled maintenance completes.
   * @return autoTransitionToOperationalState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls whether change components status to operational once scheduled maintenance completes.")

  public Boolean getAutoTransitionToOperationalState() {
    return autoTransitionToOperationalState;
  }


  public void setAutoTransitionToOperationalState(Boolean autoTransitionToOperationalState) {
    this.autoTransitionToOperationalState = autoTransitionToOperationalState;
  }


  public PostPagesPageIdIncidentsIncident autoTweetAtBeginning(Boolean autoTweetAtBeginning) {
    
    this.autoTweetAtBeginning = autoTweetAtBeginning;
    return this;
  }

   /**
   * Controls whether tweet automatically when scheduled maintenance starts.
   * @return autoTweetAtBeginning
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls whether tweet automatically when scheduled maintenance starts.")

  public Boolean getAutoTweetAtBeginning() {
    return autoTweetAtBeginning;
  }


  public void setAutoTweetAtBeginning(Boolean autoTweetAtBeginning) {
    this.autoTweetAtBeginning = autoTweetAtBeginning;
  }


  public PostPagesPageIdIncidentsIncident autoTweetOnCompletion(Boolean autoTweetOnCompletion) {
    
    this.autoTweetOnCompletion = autoTweetOnCompletion;
    return this;
  }

   /**
   * Controls whether tweet automatically when scheduled maintenance completes.
   * @return autoTweetOnCompletion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls whether tweet automatically when scheduled maintenance completes.")

  public Boolean getAutoTweetOnCompletion() {
    return autoTweetOnCompletion;
  }


  public void setAutoTweetOnCompletion(Boolean autoTweetOnCompletion) {
    this.autoTweetOnCompletion = autoTweetOnCompletion;
  }


  public PostPagesPageIdIncidentsIncident autoTweetOnCreation(Boolean autoTweetOnCreation) {
    
    this.autoTweetOnCreation = autoTweetOnCreation;
    return this;
  }

   /**
   * Controls whether tweet automatically when scheduled maintenance is created.
   * @return autoTweetOnCreation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls whether tweet automatically when scheduled maintenance is created.")

  public Boolean getAutoTweetOnCreation() {
    return autoTweetOnCreation;
  }


  public void setAutoTweetOnCreation(Boolean autoTweetOnCreation) {
    this.autoTweetOnCreation = autoTweetOnCreation;
  }


  public PostPagesPageIdIncidentsIncident autoTweetOneHourBefore(Boolean autoTweetOneHourBefore) {
    
    this.autoTweetOneHourBefore = autoTweetOneHourBefore;
    return this;
  }

   /**
   * Controls whether tweet automatically one hour before scheduled maintenance starts.
   * @return autoTweetOneHourBefore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls whether tweet automatically one hour before scheduled maintenance starts.")

  public Boolean getAutoTweetOneHourBefore() {
    return autoTweetOneHourBefore;
  }


  public void setAutoTweetOneHourBefore(Boolean autoTweetOneHourBefore) {
    this.autoTweetOneHourBefore = autoTweetOneHourBefore;
  }


  public PostPagesPageIdIncidentsIncident backfillDate(String backfillDate) {
    
    this.backfillDate = backfillDate;
    return this;
  }

   /**
   * TimeStamp when incident was backfilled.
   * @return backfillDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TimeStamp when incident was backfilled.")

  public String getBackfillDate() {
    return backfillDate;
  }


  public void setBackfillDate(String backfillDate) {
    this.backfillDate = backfillDate;
  }


  public PostPagesPageIdIncidentsIncident backfilled(Boolean backfilled) {
    
    this.backfilled = backfilled;
    return this;
  }

   /**
   * Controls whether incident is backfilled. If true, components cannot be specified.
   * @return backfilled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls whether incident is backfilled. If true, components cannot be specified.")

  public Boolean getBackfilled() {
    return backfilled;
  }


  public void setBackfilled(Boolean backfilled) {
    this.backfilled = backfilled;
  }


  public PostPagesPageIdIncidentsIncident body(String body) {
    
    this.body = body;
    return this;
  }

   /**
   * The initial message, created as the first incident update.
   * @return body
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The initial message, created as the first incident update.")

  public String getBody() {
    return body;
  }


  public void setBody(String body) {
    this.body = body;
  }


  public PostPagesPageIdIncidentsIncident components(Map<String, String> components) {
    
    this.components = components;
    return this;
  }

  public PostPagesPageIdIncidentsIncident putComponentsItem(String key, String componentsItem) {
    if (this.components == null) {
      this.components = new HashMap<String, String>();
    }
    this.components.put(key, componentsItem);
    return this;
  }

   /**
   * Map of status changes to apply to affected components
   * @return components
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"7w6dwrtn93c9\":\"operational\"}", value = "Map of status changes to apply to affected components")

  public Map<String, String> getComponents() {
    return components;
  }


  public void setComponents(Map<String, String> components) {
    this.components = components;
  }


  public PostPagesPageIdIncidentsIncident componentIds(List<String> componentIds) {
    
    this.componentIds = componentIds;
    return this;
  }

  public PostPagesPageIdIncidentsIncident addComponentIdsItem(String componentIdsItem) {
    if (this.componentIds == null) {
      this.componentIds = new ArrayList<String>();
    }
    this.componentIds.add(componentIdsItem);
    return this;
  }

   /**
   * List of component_ids affected by this incident
   * @return componentIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of component_ids affected by this incident")

  public List<String> getComponentIds() {
    return componentIds;
  }


  public void setComponentIds(List<String> componentIds) {
    this.componentIds = componentIds;
  }


  public PostPagesPageIdIncidentsIncident scheduledAutoTransition(Boolean scheduledAutoTransition) {
    
    this.scheduledAutoTransition = scheduledAutoTransition;
    return this;
  }

   /**
   * Same as :scheduled_auto_transition_in_progress. Controls whether the incident is scheduled to automatically change to in progress.
   * @return scheduledAutoTransition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Same as :scheduled_auto_transition_in_progress. Controls whether the incident is scheduled to automatically change to in progress.")

  public Boolean getScheduledAutoTransition() {
    return scheduledAutoTransition;
  }


  public void setScheduledAutoTransition(Boolean scheduledAutoTransition) {
    this.scheduledAutoTransition = scheduledAutoTransition;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostPagesPageIdIncidentsIncident postPagesPageIdIncidentsIncident = (PostPagesPageIdIncidentsIncident) o;
    return Objects.equals(this.name, postPagesPageIdIncidentsIncident.name) &&
        Objects.equals(this.status, postPagesPageIdIncidentsIncident.status) &&
        Objects.equals(this.impactOverride, postPagesPageIdIncidentsIncident.impactOverride) &&
        Objects.equals(this.scheduledFor, postPagesPageIdIncidentsIncident.scheduledFor) &&
        Objects.equals(this.scheduledUntil, postPagesPageIdIncidentsIncident.scheduledUntil) &&
        Objects.equals(this.scheduledRemindPrior, postPagesPageIdIncidentsIncident.scheduledRemindPrior) &&
        Objects.equals(this.scheduledAutoInProgress, postPagesPageIdIncidentsIncident.scheduledAutoInProgress) &&
        Objects.equals(this.scheduledAutoCompleted, postPagesPageIdIncidentsIncident.scheduledAutoCompleted) &&
        Objects.equals(this.metadata, postPagesPageIdIncidentsIncident.metadata) &&
        Objects.equals(this.deliverNotifications, postPagesPageIdIncidentsIncident.deliverNotifications) &&
        Objects.equals(this.autoTransitionDeliverNotificationsAtEnd, postPagesPageIdIncidentsIncident.autoTransitionDeliverNotificationsAtEnd) &&
        Objects.equals(this.autoTransitionDeliverNotificationsAtStart, postPagesPageIdIncidentsIncident.autoTransitionDeliverNotificationsAtStart) &&
        Objects.equals(this.autoTransitionToMaintenanceState, postPagesPageIdIncidentsIncident.autoTransitionToMaintenanceState) &&
        Objects.equals(this.autoTransitionToOperationalState, postPagesPageIdIncidentsIncident.autoTransitionToOperationalState) &&
        Objects.equals(this.autoTweetAtBeginning, postPagesPageIdIncidentsIncident.autoTweetAtBeginning) &&
        Objects.equals(this.autoTweetOnCompletion, postPagesPageIdIncidentsIncident.autoTweetOnCompletion) &&
        Objects.equals(this.autoTweetOnCreation, postPagesPageIdIncidentsIncident.autoTweetOnCreation) &&
        Objects.equals(this.autoTweetOneHourBefore, postPagesPageIdIncidentsIncident.autoTweetOneHourBefore) &&
        Objects.equals(this.backfillDate, postPagesPageIdIncidentsIncident.backfillDate) &&
        Objects.equals(this.backfilled, postPagesPageIdIncidentsIncident.backfilled) &&
        Objects.equals(this.body, postPagesPageIdIncidentsIncident.body) &&
        Objects.equals(this.components, postPagesPageIdIncidentsIncident.components) &&
        Objects.equals(this.componentIds, postPagesPageIdIncidentsIncident.componentIds) &&
        Objects.equals(this.scheduledAutoTransition, postPagesPageIdIncidentsIncident.scheduledAutoTransition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, status, impactOverride, scheduledFor, scheduledUntil, scheduledRemindPrior, scheduledAutoInProgress, scheduledAutoCompleted, metadata, deliverNotifications, autoTransitionDeliverNotificationsAtEnd, autoTransitionDeliverNotificationsAtStart, autoTransitionToMaintenanceState, autoTransitionToOperationalState, autoTweetAtBeginning, autoTweetOnCompletion, autoTweetOnCreation, autoTweetOneHourBefore, backfillDate, backfilled, body, components, componentIds, scheduledAutoTransition);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostPagesPageIdIncidentsIncident {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    impactOverride: ").append(toIndentedString(impactOverride)).append("\n");
    sb.append("    scheduledFor: ").append(toIndentedString(scheduledFor)).append("\n");
    sb.append("    scheduledUntil: ").append(toIndentedString(scheduledUntil)).append("\n");
    sb.append("    scheduledRemindPrior: ").append(toIndentedString(scheduledRemindPrior)).append("\n");
    sb.append("    scheduledAutoInProgress: ").append(toIndentedString(scheduledAutoInProgress)).append("\n");
    sb.append("    scheduledAutoCompleted: ").append(toIndentedString(scheduledAutoCompleted)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    deliverNotifications: ").append(toIndentedString(deliverNotifications)).append("\n");
    sb.append("    autoTransitionDeliverNotificationsAtEnd: ").append(toIndentedString(autoTransitionDeliverNotificationsAtEnd)).append("\n");
    sb.append("    autoTransitionDeliverNotificationsAtStart: ").append(toIndentedString(autoTransitionDeliverNotificationsAtStart)).append("\n");
    sb.append("    autoTransitionToMaintenanceState: ").append(toIndentedString(autoTransitionToMaintenanceState)).append("\n");
    sb.append("    autoTransitionToOperationalState: ").append(toIndentedString(autoTransitionToOperationalState)).append("\n");
    sb.append("    autoTweetAtBeginning: ").append(toIndentedString(autoTweetAtBeginning)).append("\n");
    sb.append("    autoTweetOnCompletion: ").append(toIndentedString(autoTweetOnCompletion)).append("\n");
    sb.append("    autoTweetOnCreation: ").append(toIndentedString(autoTweetOnCreation)).append("\n");
    sb.append("    autoTweetOneHourBefore: ").append(toIndentedString(autoTweetOneHourBefore)).append("\n");
    sb.append("    backfillDate: ").append(toIndentedString(backfillDate)).append("\n");
    sb.append("    backfilled: ").append(toIndentedString(backfilled)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("    componentIds: ").append(toIndentedString(componentIds)).append("\n");
    sb.append("    scheduledAutoTransition: ").append(toIndentedString(scheduledAutoTransition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

