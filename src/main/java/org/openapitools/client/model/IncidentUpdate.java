/*
 * Statuspage API
 * # Code of Conduct Please don't abuse the API, and please report all feature requests and issues to https://support.atlassian.com/contact  # Rate Limiting Each API token is limited to 1 request / second as measured on a 60 second rolling window. To get this limit increased, please contact us at https://support.atlassian.com/contact  # Basics  ## HTTPS It's required  ## URL Prefix In order to maintain version integrity into the future, the API is versioned. All calls currently begin with the following prefix:    https://api.statuspage.io/v1/  ## RESTful Interface Wherever possible, the API seeks to implement repeatable patterns with logical, representative URLs and descriptive HTTP verbs. Below are some examples and conventions you will see throughout the documentation.  * Collections are buckets: https://api.statuspage.io/v1/pages/asdf123/incidents.json * Elements have unique IDs: https://api.statuspage.io/v1/pages/asdf123/incidents/jklm456.json * GET will retrieve information about a collection/element * POST will create an element in a collection * PATCH will update a single element * PUT will replace a single element in a collection (rarely used) * DELETE will destroy a single element  ## Sending Data Information can be sent in the body as form urlencoded or JSON, but make sure the Content-Type header matches the body structure or the server gremlins will be angry.  All examples are provided in JSON format, however they can easily be converted to form encoding if required.  Some examples of how to convert things are below:      // JSON     {       \"incident\": {         \"name\": \"test incident\",         \"components\": [\"8kbf7d35c070\", \"vtnh60py4yd7\"]       }     }      // Form Encoded (using curl as an example):     curl -X POST https://api.statuspage.io/v1/example \\       -d \"incident[name]=test incident\" \\       -d \"incident[components][]=8kbf7d35c070\" \\       -d \"incident[components][]=vtnh60py4yd7\"  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * Update a previous incident update
 */
@ApiModel(description = "Update a previous incident update")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-18T19:24:20.728733+08:00[Asia/Shanghai]")
public class IncidentUpdate {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INCIDENT_ID = "incident_id";
  @SerializedName(SERIALIZED_NAME_INCIDENT_ID)
  private String incidentId;

  public static final String SERIALIZED_NAME_AFFECTED_COMPONENTS = "affected_components";
  @SerializedName(SERIALIZED_NAME_AFFECTED_COMPONENTS)
  private List<Object> affectedComponents = null;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CUSTOM_TWEET = "custom_tweet";
  @SerializedName(SERIALIZED_NAME_CUSTOM_TWEET)
  private String customTweet;

  public static final String SERIALIZED_NAME_DELIVER_NOTIFICATIONS = "deliver_notifications";
  @SerializedName(SERIALIZED_NAME_DELIVER_NOTIFICATIONS)
  private Boolean deliverNotifications;

  public static final String SERIALIZED_NAME_DISPLAY_AT = "display_at";
  @SerializedName(SERIALIZED_NAME_DISPLAY_AT)
  private OffsetDateTime displayAt;

  /**
   * The incident status. For realtime incidents, valid values are investigating, identified, monitoring, and resolved. For scheduled incidents, valid values are scheduled, in_progress, verifying, and completed.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    INVESTIGATING("investigating"),
    
    IDENTIFIED("identified"),
    
    MONITORING("monitoring"),
    
    RESOLVED("resolved"),
    
    SCHEDULED("scheduled"),
    
    IN_PROGRESS("in_progress"),
    
    VERIFYING("verifying"),
    
    COMPLETED("completed");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_TWEET_ID = "tweet_id";
  @SerializedName(SERIALIZED_NAME_TWEET_ID)
  private String tweetId;

  public static final String SERIALIZED_NAME_TWITTER_UPDATED_AT = "twitter_updated_at";
  @SerializedName(SERIALIZED_NAME_TWITTER_UPDATED_AT)
  private OffsetDateTime twitterUpdatedAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_WANTS_TWITTER_UPDATE = "wants_twitter_update";
  @SerializedName(SERIALIZED_NAME_WANTS_TWITTER_UPDATE)
  private Boolean wantsTwitterUpdate;


  public IncidentUpdate id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Incident Update Identifier.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Incident Update Identifier.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public IncidentUpdate incidentId(String incidentId) {
    
    this.incidentId = incidentId;
    return this;
  }

   /**
   * Incident Identifier.
   * @return incidentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Incident Identifier.")

  public String getIncidentId() {
    return incidentId;
  }


  public void setIncidentId(String incidentId) {
    this.incidentId = incidentId;
  }


  public IncidentUpdate affectedComponents(List<Object> affectedComponents) {
    
    this.affectedComponents = affectedComponents;
    return this;
  }

  public IncidentUpdate addAffectedComponentsItem(Object affectedComponentsItem) {
    if (this.affectedComponents == null) {
      this.affectedComponents = new ArrayList<Object>();
    }
    this.affectedComponents.add(affectedComponentsItem);
    return this;
  }

   /**
   * Affected components associated with the incident update.
   * @return affectedComponents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Affected components associated with the incident update.")

  public List<Object> getAffectedComponents() {
    return affectedComponents;
  }


  public void setAffectedComponents(List<Object> affectedComponents) {
    this.affectedComponents = affectedComponents;
  }


  public IncidentUpdate body(String body) {
    
    this.body = body;
    return this;
  }

   /**
   * Incident update body.
   * @return body
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Incident update body.")

  public String getBody() {
    return body;
  }


  public void setBody(String body) {
    this.body = body;
  }


  public IncidentUpdate createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The timestamp when the incident update was created at.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp when the incident update was created at.")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public IncidentUpdate customTweet(String customTweet) {
    
    this.customTweet = customTweet;
    return this;
  }

   /**
   * An optional customized tweet message for incident postmortem.
   * @return customTweet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional customized tweet message for incident postmortem.")

  public String getCustomTweet() {
    return customTweet;
  }


  public void setCustomTweet(String customTweet) {
    this.customTweet = customTweet;
  }


  public IncidentUpdate deliverNotifications(Boolean deliverNotifications) {
    
    this.deliverNotifications = deliverNotifications;
    return this;
  }

   /**
   * Controls whether to delivery notifications.
   * @return deliverNotifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls whether to delivery notifications.")

  public Boolean getDeliverNotifications() {
    return deliverNotifications;
  }


  public void setDeliverNotifications(Boolean deliverNotifications) {
    this.deliverNotifications = deliverNotifications;
  }


  public IncidentUpdate displayAt(OffsetDateTime displayAt) {
    
    this.displayAt = displayAt;
    return this;
  }

   /**
   * Timestamp when incident update is happened.
   * @return displayAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp when incident update is happened.")

  public OffsetDateTime getDisplayAt() {
    return displayAt;
  }


  public void setDisplayAt(OffsetDateTime displayAt) {
    this.displayAt = displayAt;
  }


  public IncidentUpdate status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * The incident status. For realtime incidents, valid values are investigating, identified, monitoring, and resolved. For scheduled incidents, valid values are scheduled, in_progress, verifying, and completed.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The incident status. For realtime incidents, valid values are investigating, identified, monitoring, and resolved. For scheduled incidents, valid values are scheduled, in_progress, verifying, and completed.")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public IncidentUpdate tweetId(String tweetId) {
    
    this.tweetId = tweetId;
    return this;
  }

   /**
   * Tweet identifier associated to this incident update.
   * @return tweetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tweet identifier associated to this incident update.")

  public String getTweetId() {
    return tweetId;
  }


  public void setTweetId(String tweetId) {
    this.tweetId = tweetId;
  }


  public IncidentUpdate twitterUpdatedAt(OffsetDateTime twitterUpdatedAt) {
    
    this.twitterUpdatedAt = twitterUpdatedAt;
    return this;
  }

   /**
   * The timestamp when twitter updated at.
   * @return twitterUpdatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp when twitter updated at.")

  public OffsetDateTime getTwitterUpdatedAt() {
    return twitterUpdatedAt;
  }


  public void setTwitterUpdatedAt(OffsetDateTime twitterUpdatedAt) {
    this.twitterUpdatedAt = twitterUpdatedAt;
  }


  public IncidentUpdate updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The timestamp when the incident update is updated.
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp when the incident update is updated.")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public IncidentUpdate wantsTwitterUpdate(Boolean wantsTwitterUpdate) {
    
    this.wantsTwitterUpdate = wantsTwitterUpdate;
    return this;
  }

   /**
   * Controls whether to create twitter update.
   * @return wantsTwitterUpdate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls whether to create twitter update.")

  public Boolean getWantsTwitterUpdate() {
    return wantsTwitterUpdate;
  }


  public void setWantsTwitterUpdate(Boolean wantsTwitterUpdate) {
    this.wantsTwitterUpdate = wantsTwitterUpdate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IncidentUpdate incidentUpdate = (IncidentUpdate) o;
    return Objects.equals(this.id, incidentUpdate.id) &&
        Objects.equals(this.incidentId, incidentUpdate.incidentId) &&
        Objects.equals(this.affectedComponents, incidentUpdate.affectedComponents) &&
        Objects.equals(this.body, incidentUpdate.body) &&
        Objects.equals(this.createdAt, incidentUpdate.createdAt) &&
        Objects.equals(this.customTweet, incidentUpdate.customTweet) &&
        Objects.equals(this.deliverNotifications, incidentUpdate.deliverNotifications) &&
        Objects.equals(this.displayAt, incidentUpdate.displayAt) &&
        Objects.equals(this.status, incidentUpdate.status) &&
        Objects.equals(this.tweetId, incidentUpdate.tweetId) &&
        Objects.equals(this.twitterUpdatedAt, incidentUpdate.twitterUpdatedAt) &&
        Objects.equals(this.updatedAt, incidentUpdate.updatedAt) &&
        Objects.equals(this.wantsTwitterUpdate, incidentUpdate.wantsTwitterUpdate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, incidentId, affectedComponents, body, createdAt, customTweet, deliverNotifications, displayAt, status, tweetId, twitterUpdatedAt, updatedAt, wantsTwitterUpdate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IncidentUpdate {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    incidentId: ").append(toIndentedString(incidentId)).append("\n");
    sb.append("    affectedComponents: ").append(toIndentedString(affectedComponents)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    customTweet: ").append(toIndentedString(customTweet)).append("\n");
    sb.append("    deliverNotifications: ").append(toIndentedString(deliverNotifications)).append("\n");
    sb.append("    displayAt: ").append(toIndentedString(displayAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tweetId: ").append(toIndentedString(tweetId)).append("\n");
    sb.append("    twitterUpdatedAt: ").append(toIndentedString(twitterUpdatedAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    wantsTwitterUpdate: ").append(toIndentedString(wantsTwitterUpdate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

