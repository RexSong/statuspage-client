/*
 * Statuspage API
 * # Code of Conduct Please don't abuse the API, and please report all feature requests and issues to https://support.atlassian.com/contact  # Rate Limiting Each API token is limited to 1 request / second as measured on a 60 second rolling window. To get this limit increased, please contact us at https://support.atlassian.com/contact  # Basics  ## HTTPS It's required  ## URL Prefix In order to maintain version integrity into the future, the API is versioned. All calls currently begin with the following prefix:    https://api.statuspage.io/v1/  ## RESTful Interface Wherever possible, the API seeks to implement repeatable patterns with logical, representative URLs and descriptive HTTP verbs. Below are some examples and conventions you will see throughout the documentation.  * Collections are buckets: https://api.statuspage.io/v1/pages/asdf123/incidents.json * Elements have unique IDs: https://api.statuspage.io/v1/pages/asdf123/incidents/jklm456.json * GET will retrieve information about a collection/element * POST will create an element in a collection * PATCH will update a single element * PUT will replace a single element in a collection (rarely used) * DELETE will destroy a single element  ## Sending Data Information can be sent in the body as form urlencoded or JSON, but make sure the Content-Type header matches the body structure or the server gremlins will be angry.  All examples are provided in JSON format, however they can easily be converted to form encoding if required.  Some examples of how to convert things are below:      // JSON     {       \"incident\": {         \"name\": \"test incident\",         \"components\": [\"8kbf7d35c070\", \"vtnh60py4yd7\"]       }     }      // Form Encoded (using curl as an example):     curl -X POST https://api.statuspage.io/v1/example \\       -d \"incident[name]=test incident\" \\       -d \"incident[components][]=8kbf7d35c070\" \\       -d \"incident[components][]=vtnh60py4yd7\"  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Create a metric for a metric provider
 */
@ApiModel(description = "Create a metric for a metric provider")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-18T19:24:20.728733+08:00[Asia/Shanghai]")
public class Metric {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_METRICS_PROVIDER_ID = "metrics_provider_id";
  @SerializedName(SERIALIZED_NAME_METRICS_PROVIDER_ID)
  private String metricsProviderId;

  public static final String SERIALIZED_NAME_METRIC_IDENTIFIER = "metric_identifier";
  @SerializedName(SERIALIZED_NAME_METRIC_IDENTIFIER)
  private String metricIdentifier;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DISPLAY = "display";
  @SerializedName(SERIALIZED_NAME_DISPLAY)
  private Boolean display;

  public static final String SERIALIZED_NAME_TOOLTIP_DESCRIPTION = "tooltip_description";
  @SerializedName(SERIALIZED_NAME_TOOLTIP_DESCRIPTION)
  private String tooltipDescription;

  public static final String SERIALIZED_NAME_BACKFILLED = "backfilled";
  @SerializedName(SERIALIZED_NAME_BACKFILLED)
  private Boolean backfilled;

  public static final String SERIALIZED_NAME_Y_AXIS_MIN = "y_axis_min";
  @SerializedName(SERIALIZED_NAME_Y_AXIS_MIN)
  private Float yAxisMin;

  public static final String SERIALIZED_NAME_Y_AXIS_MAX = "y_axis_max";
  @SerializedName(SERIALIZED_NAME_Y_AXIS_MAX)
  private Float yAxisMax;

  public static final String SERIALIZED_NAME_Y_AXIS_HIDDEN = "y_axis_hidden";
  @SerializedName(SERIALIZED_NAME_Y_AXIS_HIDDEN)
  private Boolean yAxisHidden;

  public static final String SERIALIZED_NAME_SUFFIX = "suffix";
  @SerializedName(SERIALIZED_NAME_SUFFIX)
  private String suffix;

  public static final String SERIALIZED_NAME_DECIMAL_PLACES = "decimal_places";
  @SerializedName(SERIALIZED_NAME_DECIMAL_PLACES)
  private Integer decimalPlaces;

  public static final String SERIALIZED_NAME_MOST_RECENT_DATA_AT = "most_recent_data_at";
  @SerializedName(SERIALIZED_NAME_MOST_RECENT_DATA_AT)
  private OffsetDateTime mostRecentDataAt;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_LAST_FETCHED_AT = "last_fetched_at";
  @SerializedName(SERIALIZED_NAME_LAST_FETCHED_AT)
  private OffsetDateTime lastFetchedAt;

  public static final String SERIALIZED_NAME_BACKFILL_PERCENTAGE = "backfill_percentage";
  @SerializedName(SERIALIZED_NAME_BACKFILL_PERCENTAGE)
  private Integer backfillPercentage;

  public static final String SERIALIZED_NAME_REFERENCE_NAME = "reference_name";
  @SerializedName(SERIALIZED_NAME_REFERENCE_NAME)
  private String referenceName;


  public Metric id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Metric identifier
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Metric identifier")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Metric metricsProviderId(String metricsProviderId) {
    
    this.metricsProviderId = metricsProviderId;
    return this;
  }

   /**
   * Metric Provider identifier
   * @return metricsProviderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Metric Provider identifier")

  public String getMetricsProviderId() {
    return metricsProviderId;
  }


  public void setMetricsProviderId(String metricsProviderId) {
    this.metricsProviderId = metricsProviderId;
  }


  public Metric metricIdentifier(String metricIdentifier) {
    
    this.metricIdentifier = metricIdentifier;
    return this;
  }

   /**
   * Metric Display identifier used to look up the metric data from the provider
   * @return metricIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Metric Display identifier used to look up the metric data from the provider")

  public String getMetricIdentifier() {
    return metricIdentifier;
  }


  public void setMetricIdentifier(String metricIdentifier) {
    this.metricIdentifier = metricIdentifier;
  }


  public Metric name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of metric
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of metric")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Metric display(Boolean display) {
    
    this.display = display;
    return this;
  }

   /**
   * Should the metric be displayed
   * @return display
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Should the metric be displayed")

  public Boolean getDisplay() {
    return display;
  }


  public void setDisplay(Boolean display) {
    this.display = display;
  }


  public Metric tooltipDescription(String tooltipDescription) {
    
    this.tooltipDescription = tooltipDescription;
    return this;
  }

   /**
   * Get tooltipDescription
   * @return tooltipDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTooltipDescription() {
    return tooltipDescription;
  }


  public void setTooltipDescription(String tooltipDescription) {
    this.tooltipDescription = tooltipDescription;
  }


  public Metric backfilled(Boolean backfilled) {
    
    this.backfilled = backfilled;
    return this;
  }

   /**
   * Get backfilled
   * @return backfilled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBackfilled() {
    return backfilled;
  }


  public void setBackfilled(Boolean backfilled) {
    this.backfilled = backfilled;
  }


  public Metric yAxisMin(Float yAxisMin) {
    
    this.yAxisMin = yAxisMin;
    return this;
  }

   /**
   * Get yAxisMin
   * @return yAxisMin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getyAxisMin() {
    return yAxisMin;
  }


  public void setyAxisMin(Float yAxisMin) {
    this.yAxisMin = yAxisMin;
  }


  public Metric yAxisMax(Float yAxisMax) {
    
    this.yAxisMax = yAxisMax;
    return this;
  }

   /**
   * Get yAxisMax
   * @return yAxisMax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getyAxisMax() {
    return yAxisMax;
  }


  public void setyAxisMax(Float yAxisMax) {
    this.yAxisMax = yAxisMax;
  }


  public Metric yAxisHidden(Boolean yAxisHidden) {
    
    this.yAxisHidden = yAxisHidden;
    return this;
  }

   /**
   * Should the values on the y axis be hidden on render
   * @return yAxisHidden
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Should the values on the y axis be hidden on render")

  public Boolean getyAxisHidden() {
    return yAxisHidden;
  }


  public void setyAxisHidden(Boolean yAxisHidden) {
    this.yAxisHidden = yAxisHidden;
  }


  public Metric suffix(String suffix) {
    
    this.suffix = suffix;
    return this;
  }

   /**
   * Suffix to describe the units on the graph
   * @return suffix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Suffix to describe the units on the graph")

  public String getSuffix() {
    return suffix;
  }


  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }


  public Metric decimalPlaces(Integer decimalPlaces) {
    
    this.decimalPlaces = decimalPlaces;
    return this;
  }

   /**
   * Get decimalPlaces
   * @return decimalPlaces
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDecimalPlaces() {
    return decimalPlaces;
  }


  public void setDecimalPlaces(Integer decimalPlaces) {
    this.decimalPlaces = decimalPlaces;
  }


  public Metric mostRecentDataAt(OffsetDateTime mostRecentDataAt) {
    
    this.mostRecentDataAt = mostRecentDataAt;
    return this;
  }

   /**
   * Get mostRecentDataAt
   * @return mostRecentDataAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getMostRecentDataAt() {
    return mostRecentDataAt;
  }


  public void setMostRecentDataAt(OffsetDateTime mostRecentDataAt) {
    this.mostRecentDataAt = mostRecentDataAt;
  }


  public Metric createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Metric updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public Metric lastFetchedAt(OffsetDateTime lastFetchedAt) {
    
    this.lastFetchedAt = lastFetchedAt;
    return this;
  }

   /**
   * Get lastFetchedAt
   * @return lastFetchedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getLastFetchedAt() {
    return lastFetchedAt;
  }


  public void setLastFetchedAt(OffsetDateTime lastFetchedAt) {
    this.lastFetchedAt = lastFetchedAt;
  }


  public Metric backfillPercentage(Integer backfillPercentage) {
    
    this.backfillPercentage = backfillPercentage;
    return this;
  }

   /**
   * Get backfillPercentage
   * @return backfillPercentage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getBackfillPercentage() {
    return backfillPercentage;
  }


  public void setBackfillPercentage(Integer backfillPercentage) {
    this.backfillPercentage = backfillPercentage;
  }


  public Metric referenceName(String referenceName) {
    
    this.referenceName = referenceName;
    return this;
  }

   /**
   * Get referenceName
   * @return referenceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReferenceName() {
    return referenceName;
  }


  public void setReferenceName(String referenceName) {
    this.referenceName = referenceName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Metric metric = (Metric) o;
    return Objects.equals(this.id, metric.id) &&
        Objects.equals(this.metricsProviderId, metric.metricsProviderId) &&
        Objects.equals(this.metricIdentifier, metric.metricIdentifier) &&
        Objects.equals(this.name, metric.name) &&
        Objects.equals(this.display, metric.display) &&
        Objects.equals(this.tooltipDescription, metric.tooltipDescription) &&
        Objects.equals(this.backfilled, metric.backfilled) &&
        Objects.equals(this.yAxisMin, metric.yAxisMin) &&
        Objects.equals(this.yAxisMax, metric.yAxisMax) &&
        Objects.equals(this.yAxisHidden, metric.yAxisHidden) &&
        Objects.equals(this.suffix, metric.suffix) &&
        Objects.equals(this.decimalPlaces, metric.decimalPlaces) &&
        Objects.equals(this.mostRecentDataAt, metric.mostRecentDataAt) &&
        Objects.equals(this.createdAt, metric.createdAt) &&
        Objects.equals(this.updatedAt, metric.updatedAt) &&
        Objects.equals(this.lastFetchedAt, metric.lastFetchedAt) &&
        Objects.equals(this.backfillPercentage, metric.backfillPercentage) &&
        Objects.equals(this.referenceName, metric.referenceName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, metricsProviderId, metricIdentifier, name, display, tooltipDescription, backfilled, yAxisMin, yAxisMax, yAxisHidden, suffix, decimalPlaces, mostRecentDataAt, createdAt, updatedAt, lastFetchedAt, backfillPercentage, referenceName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Metric {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    metricsProviderId: ").append(toIndentedString(metricsProviderId)).append("\n");
    sb.append("    metricIdentifier: ").append(toIndentedString(metricIdentifier)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    display: ").append(toIndentedString(display)).append("\n");
    sb.append("    tooltipDescription: ").append(toIndentedString(tooltipDescription)).append("\n");
    sb.append("    backfilled: ").append(toIndentedString(backfilled)).append("\n");
    sb.append("    yAxisMin: ").append(toIndentedString(yAxisMin)).append("\n");
    sb.append("    yAxisMax: ").append(toIndentedString(yAxisMax)).append("\n");
    sb.append("    yAxisHidden: ").append(toIndentedString(yAxisHidden)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    decimalPlaces: ").append(toIndentedString(decimalPlaces)).append("\n");
    sb.append("    mostRecentDataAt: ").append(toIndentedString(mostRecentDataAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    lastFetchedAt: ").append(toIndentedString(lastFetchedAt)).append("\n");
    sb.append("    backfillPercentage: ").append(toIndentedString(backfillPercentage)).append("\n");
    sb.append("    referenceName: ").append(toIndentedString(referenceName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

