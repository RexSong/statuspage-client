/*
 * Statuspage API
 * # Code of Conduct Please don't abuse the API, and please report all feature requests and issues to https://support.atlassian.com/contact  # Rate Limiting Each API token is limited to 1 request / second as measured on a 60 second rolling window. To get this limit increased, please contact us at https://support.atlassian.com/contact  # Basics  ## HTTPS It's required  ## URL Prefix In order to maintain version integrity into the future, the API is versioned. All calls currently begin with the following prefix:    https://api.statuspage.io/v1/  ## RESTful Interface Wherever possible, the API seeks to implement repeatable patterns with logical, representative URLs and descriptive HTTP verbs. Below are some examples and conventions you will see throughout the documentation.  * Collections are buckets: https://api.statuspage.io/v1/pages/asdf123/incidents.json * Elements have unique IDs: https://api.statuspage.io/v1/pages/asdf123/incidents/jklm456.json * GET will retrieve information about a collection/element * POST will create an element in a collection * PATCH will update a single element * PUT will replace a single element in a collection (rarely used) * DELETE will destroy a single element  ## Sending Data Information can be sent in the body as form urlencoded or JSON, but make sure the Content-Type header matches the body structure or the server gremlins will be angry.  All examples are provided in JSON format, however they can easily be converted to form encoding if required.  Some examples of how to convert things are below:      // JSON     {       \"incident\": {         \"name\": \"test incident\",         \"components\": [\"8kbf7d35c070\", \"vtnh60py4yd7\"]       }     }      // Form Encoded (using curl as an example):     curl -X POST https://api.statuspage.io/v1/example \\       -d \"incident[name]=test incident\" \\       -d \"incident[components][]=8kbf7d35c070\" \\       -d \"incident[components][]=vtnh60py4yd7\"  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PatchPagesPageIdStatusEmbedConfigStatusEmbedConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-18T19:24:20.728733+08:00[Asia/Shanghai]")
public class PatchPagesPageIdStatusEmbedConfigStatusEmbedConfig {
  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private String position;

  public static final String SERIALIZED_NAME_INCIDENT_BACKGROUND_COLOR = "incident_background_color";
  @SerializedName(SERIALIZED_NAME_INCIDENT_BACKGROUND_COLOR)
  private String incidentBackgroundColor;

  public static final String SERIALIZED_NAME_INCIDENT_TEXT_COLOR = "incident_text_color";
  @SerializedName(SERIALIZED_NAME_INCIDENT_TEXT_COLOR)
  private String incidentTextColor;

  public static final String SERIALIZED_NAME_MAINTENANCE_BACKGROUND_COLOR = "maintenance_background_color";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_BACKGROUND_COLOR)
  private String maintenanceBackgroundColor;

  public static final String SERIALIZED_NAME_MAINTENANCE_TEXT_COLOR = "maintenance_text_color";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_TEXT_COLOR)
  private String maintenanceTextColor;


  public PatchPagesPageIdStatusEmbedConfigStatusEmbedConfig position(String position) {
    
    this.position = position;
    return this;
  }

   /**
   * Corner where status embed iframe will appear on page
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Corner where status embed iframe will appear on page")

  public String getPosition() {
    return position;
  }


  public void setPosition(String position) {
    this.position = position;
  }


  public PatchPagesPageIdStatusEmbedConfigStatusEmbedConfig incidentBackgroundColor(String incidentBackgroundColor) {
    
    this.incidentBackgroundColor = incidentBackgroundColor;
    return this;
  }

   /**
   * Color of status embed iframe background when displaying incident
   * @return incidentBackgroundColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Color of status embed iframe background when displaying incident")

  public String getIncidentBackgroundColor() {
    return incidentBackgroundColor;
  }


  public void setIncidentBackgroundColor(String incidentBackgroundColor) {
    this.incidentBackgroundColor = incidentBackgroundColor;
  }


  public PatchPagesPageIdStatusEmbedConfigStatusEmbedConfig incidentTextColor(String incidentTextColor) {
    
    this.incidentTextColor = incidentTextColor;
    return this;
  }

   /**
   * Color of status embed iframe text when displaying incident
   * @return incidentTextColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Color of status embed iframe text when displaying incident")

  public String getIncidentTextColor() {
    return incidentTextColor;
  }


  public void setIncidentTextColor(String incidentTextColor) {
    this.incidentTextColor = incidentTextColor;
  }


  public PatchPagesPageIdStatusEmbedConfigStatusEmbedConfig maintenanceBackgroundColor(String maintenanceBackgroundColor) {
    
    this.maintenanceBackgroundColor = maintenanceBackgroundColor;
    return this;
  }

   /**
   * Color of status embed iframe background when displaying maintenance
   * @return maintenanceBackgroundColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Color of status embed iframe background when displaying maintenance")

  public String getMaintenanceBackgroundColor() {
    return maintenanceBackgroundColor;
  }


  public void setMaintenanceBackgroundColor(String maintenanceBackgroundColor) {
    this.maintenanceBackgroundColor = maintenanceBackgroundColor;
  }


  public PatchPagesPageIdStatusEmbedConfigStatusEmbedConfig maintenanceTextColor(String maintenanceTextColor) {
    
    this.maintenanceTextColor = maintenanceTextColor;
    return this;
  }

   /**
   * Color of status embed iframe text when displaying maintenance
   * @return maintenanceTextColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Color of status embed iframe text when displaying maintenance")

  public String getMaintenanceTextColor() {
    return maintenanceTextColor;
  }


  public void setMaintenanceTextColor(String maintenanceTextColor) {
    this.maintenanceTextColor = maintenanceTextColor;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatchPagesPageIdStatusEmbedConfigStatusEmbedConfig patchPagesPageIdStatusEmbedConfigStatusEmbedConfig = (PatchPagesPageIdStatusEmbedConfigStatusEmbedConfig) o;
    return Objects.equals(this.position, patchPagesPageIdStatusEmbedConfigStatusEmbedConfig.position) &&
        Objects.equals(this.incidentBackgroundColor, patchPagesPageIdStatusEmbedConfigStatusEmbedConfig.incidentBackgroundColor) &&
        Objects.equals(this.incidentTextColor, patchPagesPageIdStatusEmbedConfigStatusEmbedConfig.incidentTextColor) &&
        Objects.equals(this.maintenanceBackgroundColor, patchPagesPageIdStatusEmbedConfigStatusEmbedConfig.maintenanceBackgroundColor) &&
        Objects.equals(this.maintenanceTextColor, patchPagesPageIdStatusEmbedConfigStatusEmbedConfig.maintenanceTextColor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(position, incidentBackgroundColor, incidentTextColor, maintenanceBackgroundColor, maintenanceTextColor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatchPagesPageIdStatusEmbedConfigStatusEmbedConfig {\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    incidentBackgroundColor: ").append(toIndentedString(incidentBackgroundColor)).append("\n");
    sb.append("    incidentTextColor: ").append(toIndentedString(incidentTextColor)).append("\n");
    sb.append("    maintenanceBackgroundColor: ").append(toIndentedString(maintenanceBackgroundColor)).append("\n");
    sb.append("    maintenanceTextColor: ").append(toIndentedString(maintenanceTextColor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

